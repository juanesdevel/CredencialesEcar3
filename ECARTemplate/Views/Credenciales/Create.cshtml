@model ECARTemplate.Models.Credencial

@{
    ViewData["Title"] = "Crear Credencial";
}

<a asp-action="Index" class="btn btn-secondary ms-2">Volver a Credenciales</a>
<br />

<div class="container">
    <h1 class="text-center mb-4">Crear Credencial</h1>

    <div class="row justify-content-center px-0">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Nueva Credencial</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="mb-2 mt-0">
                            <label for="CodigoUsuarioEcarBusqueda" class="control-label">Buscar Código Empleado</label>
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="T000" id="CodigoUsuarioEcarBusqueda" />
                            </div>
                        </div>
                        <hr />
                        <div class="mb-2 mt-0">
                            <label asp-for="FechaYHora" class="control-label">Fecha y Hora</label>
                            <input asp-for="FechaYHora" class="form-control" id="campoFechaHora" readonly />
                            <span asp-validation-for="FechaYHora" class="text-danger"></span>
                        </div>
                        <div class="mb-2 mt-0">
                            <label asp-for="CodigoUsuarioEcar" class="control-label">Código Empleado</label>
                            <input asp-for="CodigoUsuarioEcar" class="form-control" placeholder="Código Empleado" id="CodigoUsuarioEcar" readonly />
                            <span asp-validation-for="CodigoUsuarioEcar" class="text-danger"></span>
                        </div>
                        <div class="mb-2 mt-0">
                            <label asp-for="NombreUsuario" class="control-label">Nombre Empleado</label>
                            <input asp-for="NombreUsuario" class="form-control" placeholder="Nombre Empleado" id="NombreUsuario" readonly />
                            <span asp-validation-for="NombreUsuario" class="text-danger"></span>
                        </div>
                        <div class="mb-2 mt-0">
                            <label asp-for="Perfil" class="control-label">Perfil</label>
                            <input asp-for="Perfil" class="form-control" />
                            <span asp-validation-for="Perfil" class="text-danger"></span>
                        </div>
                        <div class="mb-2 mt-0">
                            <label asp-for="Estado" class="control-label" hidden></label>
                            <input asp-for="Estado" class="form-control" value="Activo" readonly hidden />
                            <span asp-validation-for="Estado" class="text-danger"></span>
                        </div>

                        <div class="mb-2 mt-0">
                            <label asp-for="UsuarioRegistro" class="control-label" hidden></label>
                            <input asp-for="UsuarioRegistro" class="form-control" hidden value="@User.Identity.Name" readonly />
                            <span asp-validation-for="UsuarioRegistro" class="text-danger"></span>
                        </div>
                        <hr class="mb-2" />

                        <div class="mb-2 mt-0">
                            <label for="BuscarReferenciaEquipo" class="control-label">Buscar Código Equipo / software</label>
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Código (AAA01)" id="BuscarReferenciaEquipo" />
                                <button type="button" id="btnBuscarReferenciaEquipo" class="btn btn-outline-primary btn-sm ms-2">Buscar</button>
                            </div>
                        </div>
                        <div class="mb-2 mt-0">
                            <label asp-for="CodigoEquipo" class="control-label">Asignar al Equipo o Software</label>
                            <input asp-for="CodigoEquipo" class="form-control" placeholder="Código" readonly />
                            <span asp-validation-for="CodigoEquipo" class="text-danger"></span>
                        </div>
                        <div class="mb-2 mt-0">
                            <label for="NotaEquipo" class="control-label">Nota del Equipo</label>
                            <textarea id="NotaEquipo" class="form-control" rows="3" readonly></textarea>
                        </div>
                        <hr class="mb-2" />

                        <div class="mb-2 mt-0">
                            <label asp-for="Usuario" class="control-label">Usuario (Firma BPM)</label>
                            <input asp-for="Usuario" class="form-control" id="Usuario" />
                            <span asp-validation-for="Usuario" class="text-danger"></span>
                        </div>
                        <div class="mb-2 mt-0">
                            <label asp-for="Contrasena" class="control-label">Contraseña</label>
                            <input asp-for="Contrasena" class="form-control" id="Contrasena" placeholder="Generar Contraseña" />
                            <span asp-validation-for="Contrasena" class="text-danger"></span>
                        </div>
                        <div class="form-group text-center mt-4">
                            <button type="submit" class="btn btn-success">Crear</button>
                            <a asp-action="Index" class="btn btn-secondary ms-2">Volver a la Lista</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Lógica para generar contraseña (se mantiene igual)
            function generarContrasenaAleatoria() {
                let contrasena = '';
                for (let i = 0; i < 6; i++) {
                    contrasena += Math.floor(Math.random() * 10);
                }
                return contrasena;
            }
            if (!$('#generarContrasenaBtn').length) {
                $('#Contrasena').after('<button type="button" id="generarContrasenaBtn" class="btn btn-outline-info btn-sm ms-2">Generar Contraseña</button>');
            }
            $('#generarContrasenaBtn').click(function() {
                const nuevaContrasena = generarContrasenaAleatoria();
                $('#Contrasena').val(nuevaContrasena);
            });

            // Lógica para buscar empleado (se mantiene igual)
            $('#CodigoUsuarioEcarBusqueda').after('<button type="button" id="btnBuscarUsuario" class="btn btn-outline-primary btn-sm ms-2">Buscar</button>');
            $('#btnBuscarUsuario').click(function() {
                buscarDatosUsuario();
            });
            $('#CodigoUsuarioEcarBusqueda').keypress(function(event) {
                if (event.which === 13) {
                    buscarDatosUsuario();
                    event.preventDefault();
                }
            });
            function buscarDatosUsuario() {
                var codigoUsuarioEcarBusqueda = $('#CodigoUsuarioEcarBusqueda').val();
                if (codigoUsuarioEcarBusqueda) {
                    $.ajax({
                        url: '/Empleados/ObtenerDatosUsuario',
                        type: 'GET',
                        data: { codigoEmpleadoEcar: codigoUsuarioEcarBusqueda },
                        dataType: 'json',
                        success: function(response) {
                            if (response.success) {
                                $('#CodigoUsuarioEcar').val(response.data.codigoUsuarioEcar);
                                $('#NombreUsuario').val(response.data.nombreEmpleado);
                                $('#Usuario').val(response.data.usuario);
                                alert("Usuario encontrado: " + response.data.nombreEmpleado);
                            } else {
                                $('#CodigoUsuarioEcarBusqueda').val('');
                                $('#CodigoUsuarioEcar').val('');
                                $('#NombreUsuario').val('');
                                $('#Usuario').val('');
                                alert(response.message);
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error("Error en la petición AJAX:", status, error);
                            alert("Ocurrió un error al intentar recuperar los datos del usuario.");
                        }
                    });
                } else {
                    $('#CodigoUsuarioEcarBusqueda').val('');
                    $('#CodigoUsuarioEcar').val('');
                    $('#NombreUsuario').val('');
                    $('#Usuario').val('');
                    alert("Por favor, ingrese el Código Usuario para buscar.");
                }
            }

            // Lógica para buscar equipo (CORREGIDA)
            $('#btnBuscarReferenciaEquipo').click(function() {
                buscarEquipoPorCodigo();
            });
            $('#BuscarReferenciaEquipo').keypress(function(event) {
                if (event.which === 13) {
                    buscarEquipoPorCodigo();
                    event.preventDefault();
                }
            });

            function buscarEquipoPorCodigo() {
                var codigoBusqueda = $('#BuscarReferenciaEquipo').val();

                if (codigoBusqueda) {
                    $.ajax({
                        url: '@Url.Action("ObtenerDatosEquipo", "Equipos")',
                        type: 'GET',
                        data: { codigoEquipo: codigoBusqueda }, // <-- ¡CORREGIDO! Nombre del parámetro
                        dataType: 'json',
                        success: function(response) {
                            if (response && response.success) {
                                $('#CodigoEquipo').val(response.data.codigoEquipo);
                                $('#NotaEquipo').val(response.data.nota);
                                alert("Equipo encontrado: " + response.data.nombreEquipo); // <-- ¡CORREGIDO! Nombre de la propiedad
                            } else {
                                $('#CodigoEquipo').val('');
                                $('#NotaEquipo').val('');
                                alert(response.message || "No se encontró ningún equipo con ese código.");
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error("Error en la petición AJAX (Equipo):", status, error);
                            alert("Ocurrió un error al buscar el equipo.");
                            $('#CodigoEquipo').val('');
                            $('#NotaEquipo').val('');
                        }
                    });
                } else {
                    alert("Por favor, ingrese el código del equipo a buscar.");
                    $('#CodigoEquipo').val('');
                    $('#NotaEquipo').val('');
                }
            }

            // Lógica de fecha y hora (se mantiene igual)
            function obtenerFechaHoraFormateada() {
                const ahora = new Date();
                const año = ahora.getFullYear();
                const mes = String(ahora.getMonth() + 1).padStart(2, '0');
                const dia = String(ahora.getDate()).padStart(2, '0');
                const hora = String(ahora.getHours()).padStart(2, '0');
                const minutos = String(ahora.getMinutes()).padStart(2, '0');
                return `${año}-${mes}-${dia}T${hora}:${minutos}`;
            }
            document.addEventListener("DOMContentLoaded", function() {
                const campoFechaHora = document.getElementById("campoFechaHora");
                if (campoFechaHora) {
                    if (!campoFechaHora.value) {
                        campoFechaHora.value = obtenerFechaHoraFormateada();
                    }
                    campoFechaHora.setAttribute("type", "datetime-local");
                }
            });
        });
    </script>
}